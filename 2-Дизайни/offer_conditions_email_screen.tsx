import React, { useState } from 'react';
import { 
  Plus, 
  Trash2, 
  ArrowLeft, 
  ArrowRight, 
  Eye, 
  Send, 
  FileText, 
  Mail, 
  Settings,
  Clock,
  CheckCircle,
  Edit3,
  AlertCircle,
  Copy
} from 'lucide-react';

const OfferConditionsEmailScreen = () => {
  const [activeTab, setActiveTab] = useState('conditions');
  const [conditions, setConditions] = useState([
    { id: 1, text: '–£—Å–ª–æ–≤–∏—è –∑–∞ –¥–æ—Å—Ç–∞–≤–∫–∞: –í —Ä–∞–º–∫–∏—Ç–µ –Ω–∞ –°–æ—Ñ–∏—è –¥–æ—Å—Ç–∞–≤–∫–∞—Ç–∞ –µ –±–µ–∑–ø–ª–∞—Ç–Ω–∞ –ø—Ä–∏ –ø–æ—Ä—ä—á–∫–∏ –Ω–∞–¥ 1000 –ª–≤.' },
    { id: 2, text: '–£—Å–ª–æ–≤–∏—è –∑–∞ –ø–ª–∞—â–∞–Ω–µ: 70% –∞–≤–∞–Ω—Å –ø—Ä–∏ –ø–æ–¥–ø–∏—Å–≤–∞–Ω–µ –Ω–∞ –¥–æ–≥–æ–≤–æ—Ä, 30% –ø—Ä–∏ –¥–æ—Å—Ç–∞–≤–∫–∞.' },
    { id: 3, text: '–£—Å–ª–æ–≤–∏—è –∑–∞ —Å—ä—Ö—Ä–∞–Ω–µ–Ω–∏–µ: –ü—Ä–æ–¥—É–∫—Ç–∏—Ç–µ —Å–µ —Å—ä—Ö—Ä–∞–Ω—è–≤–∞—Ç –≤ —Å—É—Ö —Å–∫–ª–∞–¥ –ø—Ä–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ 15-25¬∞C.' },
    { id: 4, text: '–ì–∞—Ä–∞–Ω—Ü–∏—è: 24 –º–µ—Å–µ—Ü–∞ –≥–∞—Ä–∞–Ω—Ü–∏—è –≤—ä—Ä—Ö—É –≤—Å–∏—á–∫–∏ –ø—Ä–µ–¥–ª–∞–≥–∞–Ω–∏ –ø—Ä–æ–¥—É–∫—Ç–∏.' },
    { id: 5, text: '–í–∞–ª–∏–¥–Ω–æ—Å—Ç –Ω–∞ –æ—Ñ–µ—Ä—Ç–∞—Ç–∞: 30 –¥–Ω–∏ –æ—Ç –¥–∞—Ç–∞—Ç–∞ –Ω–∞ –∏–∑–ø—Ä–∞—â–∞–Ω–µ.' }
  ]);

  const [emailText, setEmailText] = useState(`–ó–¥—Ä–∞–≤–µ–π—Ç–µ {{client.name}},

–†–∞–¥–≤–∞–º–µ —Å–µ –¥–∞ –í–∏ –∏–∑–ø—Ä–∞—Ç–∏–º –Ω–∞—à–∞—Ç–∞ –æ—Ñ–µ—Ä—Ç–∞ –∑–∞ –ø—Ä–æ–µ–∫—Ç "{{project.name}}".

–û—Ñ–µ—Ä—Ç–∞—Ç–∞ –≤–∫–ª—é—á–≤–∞ –≤—Å–∏—á–∫–∏ –æ–±—Å—ä–¥–µ–Ω–∏ –ø—Ä–æ–¥—É–∫—Ç–∏ –∏ —É—Å–ª—É–≥–∏, —Å –¥–µ—Ç–∞–π–ª–Ω–∏ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ —Ü–µ–Ω–∏.

–ú–æ–ª—è, –∑–∞ –¥–∞ —Ä–∞–∑–≥–ª–µ–¥–∞—Ç–µ –æ—Ñ–µ—Ä—Ç–∞—Ç–∞, –ø–æ—Å–ª–µ–¥–≤–∞–π—Ç–µ —Ç–æ–∑–∏ –ª–∏–Ω–∫: {{offer.link}}

–û—Ñ–µ—Ä—Ç–∞—Ç–∞ –µ –≤–∞–ª–∏–¥–Ω–∞ –¥–æ {{offer.expires_date}}.

–ó–∞ –≤—ä–ø—Ä–æ—Å–∏ –∏–ª–∏ –¥–æ–ø—ä–ª–Ω–∏—Ç–µ–ª–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ —Å–µ –∫–æ–ª–µ–±–∞–π—Ç–µ –¥–∞ —Å–µ —Å–≤—ä—Ä–∂–µ—Ç–µ —Å –Ω–∞—Å.

–° —É–≤–∞–∂–µ–Ω–∏–µ,
{{user.name}}
PARKETSENSE
–¢–µ–ª–µ—Ñ–æ–Ω: +359 2 123 4567
Email: office@parketsense.bg`);

  const [sentHistory, setSentHistory] = useState([
    { id: 1, sentAt: '2024-06-20 14:30', version: 1, recipient: 'ivan.petrov@email.bg' },
    { id: 2, sentAt: '2024-06-21 09:15', version: 2, recipient: 'ivan.petrov@email.bg' }
  ]);

  // Demo data
  const offer = {
    id: 1,
    project: '–ö—ä—â–∞ –ò–≤–∞–Ω–æ–≤–∏',
    client: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
    phase: '–ï—Ç–∞–∂ 1 - –ü—Ä–æ–¥–∞–∂–±–∞',
    variant: '–†–∏–±–µ–Ω–∞ –∫–æ—Å—Ç - –î—ä–± –Ω–∞—Ç—É—Ä–∞–ª',
    totalValue: 12850.50,
    status: 'draft',
    sentCount: sentHistory.length
  };

  const mergeFields = [
    { key: '{{client.name}}', description: '–ò–º–µ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞' },
    { key: '{{client.company}}', description: '–§–∏—Ä–º–∞ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞' },
    { key: '{{project.name}}', description: '–ò–º–µ –Ω–∞ –ø—Ä–æ–µ–∫—Ç–∞' },
    { key: '{{project.address}}', description: '–ê–¥—Ä–µ—Å –Ω–∞ –ø—Ä–æ–µ–∫—Ç–∞' },
    { key: '{{offer.link}}', description: '–õ–∏–Ω–∫ –∫—ä–º –æ—Ñ–µ—Ä—Ç–∞—Ç–∞' },
    { key: '{{offer.expires_date}}', description: '–î–∞—Ç–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç' },
    { key: '{{offer.total}}', description: '–û–±—â–∞ —Å—Ç–æ–π–Ω–æ—Å—Ç' },
    { key: '{{user.name}}', description: '–ò–º–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è' },
    { key: '{{user.phone}}', description: '–¢–µ–ª–µ—Ñ–æ–Ω –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è' },
    { key: '{{company.name}}', description: '–ò–º–µ –Ω–∞ —Ñ–∏—Ä–º–∞—Ç–∞' },
    { key: '{{company.phone}}', description: '–¢–µ–ª–µ—Ñ–æ–Ω –Ω–∞ —Ñ–∏—Ä–º–∞—Ç–∞' },
    { key: '{{company.email}}', description: 'Email –Ω–∞ —Ñ–∏—Ä–º–∞—Ç–∞' }
  ];

  const handleAddCondition = () => {
    const newId = Math.max(...conditions.map(c => c.id)) + 1;
    setConditions([...conditions, { id: newId, text: '' }]);
  };

  const handleDeleteCondition = (conditionId) => {
    if (window.confirm('–°–∏–≥—É—Ä–Ω–∏ –ª–∏ —Å—Ç–µ, —á–µ –∏—Å–∫–∞—Ç–µ –¥–∞ –ø—Ä–µ–º–∞—Ö–Ω–µ—Ç–µ —Ç–æ–≤–∞ —É—Å–ª–æ–≤–∏–µ?')) {
      setConditions(conditions.filter(c => c.id !== conditionId));
    }
  };

  const handleUpdateCondition = (conditionId, newText) => {
    setConditions(conditions.map(c => 
      c.id === conditionId ? { ...c, text: newText } : c
    ));
  };

  const insertMergeField = (field) => {
    const textarea = document.getElementById('emailTextarea');
    const startPos = textarea.selectionStart;
    const endPos = textarea.selectionEnd;
    const newText = emailText.substring(0, startPos) + field + emailText.substring(endPos);
    setEmailText(newText);
    
    // Reset focus and cursor position
    setTimeout(() => {
      textarea.focus();
      textarea.setSelectionRange(startPos + field.length, startPos + field.length);
    }, 0);
  };

  const handlePreview = () => {
    // In real app, this would open preview modal/page
    console.log('Opening preview...');
    alert('–û—Ç–≤–∞—Ä—è —Å–µ –ø—Ä–µ–≥–ª–µ–¥ –Ω–∞ –æ—Ñ–µ—Ä—Ç–∞—Ç–∞...');
  };

  const handleSendOffer = () => {
    if (window.confirm('–°–∏–≥—É—Ä–Ω–∏ –ª–∏ —Å—Ç–µ, —á–µ –∏—Å–∫–∞—Ç–µ –¥–∞ –∏–∑–ø—Ä–∞—Ç–∏—Ç–µ –æ—Ñ–µ—Ä—Ç–∞—Ç–∞?')) {
      const newVersion = sentHistory.length + 1;
      const newSent = {
        id: Date.now(),
        sentAt: new Date().toISOString().substring(0, 16).replace('T', ' '),
        version: newVersion,
        recipient: 'ivan.petrov@email.bg'
      };
      
      setSentHistory([...sentHistory, newSent]);
      alert(`–û—Ñ–µ—Ä—Ç–∞—Ç–∞ –±–µ—à–µ –∏–∑–ø—Ä–∞—Ç–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ! (–í–µ—Ä—Å–∏—è ${newVersion})`);
    }
  };

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <div className="bg-white border-b border-gray-200 sticky top-0 z-10">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="py-4">
            <div className="flex items-center justify-between">
              <div>
                <nav className="flex items-center space-x-2 text-sm mb-1">
                  <button className="text-blue-600 hover:text-blue-800 hover:underline font-medium">
                    {offer.project}
                  </button>
                  <span className="text-gray-500">/</span>
                  <button className="text-blue-600 hover:text-blue-800 hover:underline font-medium">
                    {offer.client}
                  </button>
                  <span className="text-gray-500">/</span>
                  <button className="text-blue-600 hover:text-blue-800 hover:underline font-medium">
                    {offer.phase}
                  </button>
                  <span className="text-gray-500">/</span>
                  <button className="text-blue-600 hover:text-blue-800 hover:underline font-medium">
                    {offer.variant}
                  </button>
                </nav>
                <h1 className="text-xl font-bold text-gray-900">
                  –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –Ω–∞ –æ—Ñ–µ—Ä—Ç–∞
                </h1>
                <div className="mt-1 flex items-center space-x-4 text-sm text-gray-600">
                  <span>üí∞ {offer.totalValue.toLocaleString('bg-BG', { minimumFractionDigits: 2 })} –ª–≤</span>
                  <span>üìß –ò–∑–ø—Ä–∞—Ç–µ–Ω–∞ {offer.sentCount} –ø—ä—Ç–∏</span>
                </div>
              </div>
              
              {/* Send status */}
              <div className="text-right">
                <div className="flex items-center space-x-3 mb-2">
                  <span className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${
                    offer.status === 'draft' ? 'bg-yellow-100 text-yellow-800' :
                    offer.status === 'sent' ? 'bg-blue-100 text-blue-800' :
                    'bg-green-100 text-green-800'
                  }`}>
                    {offer.status === 'draft' && <Clock className="w-4 h-4 mr-1" />}
                    {offer.status === 'sent' && <Mail className="w-4 h-4 mr-1" />}
                    {offer.status === 'approved' && <CheckCircle className="w-4 h-4 mr-1" />}
                    {offer.status === 'draft' ? '–ß–µ—Ä–Ω–æ–≤–∞' : 
                     offer.status === 'sent' ? '–ò–∑–ø—Ä–∞—Ç–µ–Ω–∞' : '–û–¥–æ–±—Ä–µ–Ω–∞'}
                  </span>
                </div>
                {sentHistory.length > 0 && (
                  <div className="text-xs text-gray-500">
                    –ü–æ—Å–ª–µ–¥–Ω–æ –∏–∑–ø—Ä–∞—Ç–µ–Ω–∞: {sentHistory[sentHistory.length - 1].sentAt}
                  </div>
                )}
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Navigation and action buttons */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
        <div className="flex items-center justify-between mb-6">
          <div className="flex items-center space-x-3">
            <button className="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
              <ArrowLeft className="w-4 h-4 mr-2" />
              –°—Ç–∞–∏
            </button>
          </div>
          
          <div className="flex items-center space-x-3">
            <button
              onClick={handlePreview}
              className="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50"
            >
              <Eye className="w-4 h-4 mr-2" />
              –ü—Ä–µ–≥–ª–µ–¥
            </button>
            <button
              onClick={handleSendOffer}
              className={`inline-flex items-center px-6 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white ${
                offer.sentCount > 0 
                  ? 'bg-yellow-600 hover:bg-yellow-700' 
                  : 'bg-green-600 hover:bg-green-700'
              }`}
            >
              <Send className="w-4 h-4 mr-2" />
              {offer.sentCount > 0 ? `–ò–∑–ø—Ä–∞—Ç–∏ –æ—Ç–Ω–æ–≤–æ (${offer.sentCount + 1})` : '–ò–∑–ø—Ä–∞—Ç–∏'}
              {offer.sentCount > 0 && (
                <span className="ml-2 bg-white text-yellow-600 rounded-full w-5 h-5 flex items-center justify-center text-xs font-bold">
                  {offer.sentCount}
                </span>
              )}
            </button>
          </div>
        </div>

        {/* Tab navigation */}
        <div className="border-b border-gray-200 mb-6">
          <nav className="-mb-px flex space-x-8">
            <button
              onClick={() => setActiveTab('conditions')}
              className={`py-2 px-1 border-b-2 font-medium text-sm ${
                activeTab === 'conditions'
                  ? 'border-blue-500 text-blue-600'
                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
              }`}
            >
              <FileText className="w-4 h-4 inline mr-2" />
              –£—Å–ª–æ–≤–∏—è –Ω–∞ –æ—Ñ–µ—Ä—Ç–∞—Ç–∞
            </button>
            <button
              onClick={() => setActiveTab('email')}
              className={`py-2 px-1 border-b-2 font-medium text-sm ${
                activeTab === 'email'
                  ? 'border-blue-500 text-blue-600'
                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
              }`}
            >
              <Mail className="w-4 h-4 inline mr-2" />
              –¢–µ–∫—Å—Ç –Ω–∞ –∏–º–µ–π–ª–∞
            </button>
            <button
              onClick={() => setActiveTab('history')}
              className={`py-2 px-1 border-b-2 font-medium text-sm ${
                activeTab === 'history'
                  ? 'border-blue-500 text-blue-600'
                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
              }`}
            >
              <Clock className="w-4 h-4 inline mr-2" />
              –ò—Å—Ç–æ—Ä–∏—è ({sentHistory.length})
            </button>
          </nav>
        </div>

        {/* Tab content */}
        {activeTab === 'conditions' && (
          <div className="bg-white shadow rounded-lg">
            <div className="px-6 py-4 border-b border-gray-200">
              <div className="flex items-center justify-between">
                <h3 className="text-lg font-medium text-gray-900">
                  –£—Å–ª–æ–≤–∏—è –Ω–∞ –æ—Ñ–µ—Ä—Ç–∞—Ç–∞
                </h3>
                <button
                  onClick={handleAddCondition}
                  className="inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-blue-700 bg-blue-100 hover:bg-blue-200"
                >
                  <Plus className="w-4 h-4 mr-2" />
                  –î–æ–±–∞–≤–∏ —É—Å–ª–æ–≤–∏–µ
                </button>
              </div>
              <p className="mt-1 text-sm text-gray-500">
                –¢–µ–∑–∏ —É—Å–ª–æ–≤–∏—è —â–µ —Å–µ –ø–æ–∫–∞–∂–∞—Ç –≤ –∫—Ä–∞—è –Ω–∞ –æ—Ñ–µ—Ä—Ç–∞—Ç–∞
              </p>
            </div>
            
            <div className="p-6">
              {conditions.length === 0 ? (
                <div className="text-center py-12 text-gray-500">
                  <FileText className="mx-auto h-12 w-12 mb-4" />
                  <h3 className="text-lg font-medium mb-2">–ù—è–º–∞ –¥–æ–±–∞–≤–µ–Ω–∏ —É—Å–ª–æ–≤–∏—è</h3>
                  <p className="mb-4">–î–æ–±–∞–≤–µ—Ç–µ —É—Å–ª–æ–≤–∏—è –∑–∞ –¥–æ—Å—Ç–∞–≤–∫–∞, –ø–ª–∞—â–∞–Ω–µ, –≥–∞—Ä–∞–Ω—Ü–∏—è –∏ –¥—Ä.</p>
                  <button
                    onClick={handleAddCondition}
                    className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700"
                  >
                    <Plus className="w-4 h-4 mr-2" />
                    –î–æ–±–∞–≤–∏ –ø—ä—Ä–≤–æ —É—Å–ª–æ–≤–∏–µ
                  </button>
                </div>
              ) : (
                <div className="space-y-4">
                  {conditions.map((condition, index) => (
                    <div key={condition.id} className="flex items-start space-x-4 p-4 border border-gray-200 rounded-lg hover:border-gray-300">
                      <div className="flex-shrink-0 w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                        <span className="text-sm font-medium text-blue-600">{index + 1}</span>
                      </div>
                      <div className="flex-1">
                        <textarea
                          value={condition.text}
                          onChange={(e) => handleUpdateCondition(condition.id, e.target.value)}
                          placeholder="–í—ä–≤–µ–¥–µ—Ç–µ —É—Å–ª–æ–≤–∏–µ..."
                          rows={2}
                          className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 resize-none"
                        />
                      </div>
                      <button
                        onClick={() => handleDeleteCondition(condition.id)}
                        className="flex-shrink-0 p-2 text-red-600 hover:text-red-800 hover:bg-red-50 rounded-md"
                        title="–ü—Ä–µ–º–∞—Ö–Ω–∏ —É—Å–ª–æ–≤–∏–µ"
                      >
                        <Trash2 className="w-4 h-4" />
                      </button>
                    </div>
                  ))}
                </div>
              )}
            </div>
          </div>
        )}

        {activeTab === 'email' && (
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
            {/* Email editor */}
            <div className="lg:col-span-2">
              <div className="bg-white shadow rounded-lg">
                <div className="px-6 py-4 border-b border-gray-200">
                  <h3 className="text-lg font-medium text-gray-900">
                    –¢–µ–∫—Å—Ç –Ω–∞ –∏–º–µ–π–ª–∞
                  </h3>
                  <p className="mt-1 text-sm text-gray-500">
                    –¢–æ–∑–∏ —Ç–µ–∫—Å—Ç —â–µ –±—ä–¥–µ –∏–∑–ø—Ä–∞—Ç–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∫—ä–º –∫–ª–∏–µ–Ω—Ç–∞
                  </p>
                </div>
                
                <div className="p-6">
                  <div className="mb-4">
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      –¢–µ–º–∞ –Ω–∞ –∏–º–µ–π–ª–∞
                    </label>
                    <input
                      type="text"
                      defaultValue="–û—Ñ–µ—Ä—Ç–∞ –∑–∞ {{project.name}} - PARKETSENSE"
                      className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                    />
                  </div>
                  
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      –°—ä–¥—ä—Ä–∂–∞–Ω–∏–µ –Ω–∞ –∏–º–µ–π–ª–∞
                    </label>
                    <textarea
                      id="emailTextarea"
                      value={emailText}
                      onChange={(e) => setEmailText(e.target.value)}
                      rows={16}
                      className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 font-mono text-sm"
                    />
                  </div>
                  
                  <div className="mt-4 flex items-center justify-between">
                    <div className="text-sm text-gray-500">
                      <AlertCircle className="w-4 h-4 inline mr-1" />
                      –õ–∏–Ω–∫—ä—Ç –∫—ä–º –æ—Ñ–µ—Ä—Ç–∞—Ç–∞ —â–µ –±—ä–¥–µ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ
                    </div>
                    <div className="text-sm text-gray-500">
                      {emailText.length} —Å–∏–º–≤–æ–ª–∞
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {/* Merge fields */}
            <div className="lg:col-span-1">
              <div className="bg-white shadow rounded-lg">
                <div className="px-6 py-4 border-b border-gray-200">
                  <h3 className="text-lg font-medium text-gray-900">
                    Merge Fields
                  </h3>
                  <p className="mt-1 text-sm text-gray-500">
                    –ö–ª–∏–∫–Ω–µ—Ç–µ –∑–∞ –≤–º—ä–∫–≤–∞–Ω–µ –≤ —Ç–µ–∫—Å—Ç–∞
                  </p>
                </div>
                
                <div className="p-6">
                  <div className="space-y-2 max-h-96 overflow-y-auto">
                    {mergeFields.map((field) => (
                      <button
                        key={field.key}
                        onClick={() => insertMergeField(field.key)}
                        className="w-full text-left p-3 border border-gray-200 rounded-md hover:bg-gray-50 hover:border-blue-300 focus:outline-none focus:ring-2 focus:ring-blue-500 group"
                      >
                        <div className="flex items-center justify-between">
                          <div>
                            <div className="font-mono text-sm text-blue-600 font-medium">
                              {field.key}
                            </div>
                            <div className="text-xs text-gray-500 mt-1">
                              {field.description}
                            </div>
                          </div>
                          <Copy className="w-4 h-4 text-gray-400 group-hover:text-blue-600" />
                        </div>
                      </button>
                    ))}
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}

        {activeTab === 'history' && (
          <div className="bg-white shadow rounded-lg">
            <div className="px-6 py-4 border-b border-gray-200">
              <h3 className="text-lg font-medium text-gray-900">
                –ò—Å—Ç–æ—Ä–∏—è –Ω–∞ –∏–∑–ø—Ä–∞—â–∞–Ω–∏—è—Ç–∞
              </h3>
              <p className="mt-1 text-sm text-gray-500">
                –í—Å–∏—á–∫–∏ –∏–∑–ø—Ä–∞—Ç–µ–Ω–∏ –≤–µ—Ä—Å–∏–∏ –Ω–∞ –æ—Ñ–µ—Ä—Ç–∞—Ç–∞
              </p>
            </div>
            
            <div className="p-6">
              {sentHistory.length === 0 ? (
                <div className="text-center py-12 text-gray-500">
                  <Mail className="mx-auto h-12 w-12 mb-4" />
                  <h3 className="text-lg font-medium mb-2">–ù—è–º–∞ –∏–∑–ø—Ä–∞—Ç–µ–Ω–∏ –æ—Ñ–µ—Ä—Ç–∏</h3>
                  <p>–û—Ñ–µ—Ä—Ç–∞—Ç–∞ –≤—Å–µ –æ—â–µ –Ω–µ –µ –±–∏–ª–∞ –∏–∑–ø—Ä–∞—â–∞–Ω–∞ –∫—ä–º –∫–ª–∏–µ–Ω—Ç–∞</p>
                </div>
              ) : (
                <div className="space-y-4">
                  {sentHistory.map((sent) => (
                    <div key={sent.id} className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
                      <div className="flex items-center space-x-4">
                        <div className="w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center">
                          <span className="text-sm font-bold text-blue-600">v{sent.version}</span>
                        </div>
                        <div>
                          <div className="font-medium text-gray-900">
                            –í–µ—Ä—Å–∏—è {sent.version}
                          </div>
                          <div className="text-sm text-gray-500">
                            –ò–∑–ø—Ä–∞—Ç–µ–Ω–∞ –Ω–∞ {sent.sentAt} –¥–æ {sent.recipient}
                          </div>
                        </div>
                      </div>
                      <div className="flex items-center space-x-2">
                        <button className="inline-flex items-center px-3 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                          <Eye className="w-4 h-4 mr-2" />
                          Snapshot
                        </button>
                        <button className="inline-flex items-center px-3 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                          <Send className="w-4 h-4 mr-2" />
                          –ò–∑–ø—Ä–∞—Ç–∏ –æ—Ç–Ω–æ–≤–æ
                        </button>
                      </div>
                    </div>
                  ))}
                </div>
              )}
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default OfferConditionsEmailScreen;