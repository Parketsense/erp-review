import React from 'react';
import Link from 'next/link';
import { ArrowLeft, Edit, Download } from 'lucide-react';
import { Project } from '@/services/projectsApi';

interface ProjectDetailsHeaderProps {
  project: Project;
  onEdit: () => void;
  onExport?: () => void;
}

export default function ProjectDetailsHeader({ project, onEdit, onExport }: ProjectDetailsHeaderProps) {
  const getProjectTypeIcon = (type: string) => {
    switch (type) {
      case 'apartment': return 'üè†';
      case 'house': return 'üè°';
      case 'office': return 'üè¢';
      case 'commercial': return 'üè¨';
      case 'other': return 'üìã';
      default: return 'üìã';
    }
  };

  const getProjectTypeLabel = (type: string) => {
    const types = {
      apartment: '–ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç',
      house: '–ö—ä—â–∞',
      office: '–û—Ñ–∏—Å',
      commercial: '–¢—ä—Ä–≥–æ–≤—Å–∫–∏ –æ–±–µ–∫—Ç',
      other: '–î—Ä—É–≥–æ'
    };
    return types[type as keyof typeof types] || '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω';
  };

  return (
    <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
      {/* Breadcrumb Navigation */}
      <nav className="flex items-center space-x-2 text-sm text-gray-600 mb-6">
        <Link 
          href="/" 
          className="hover:text-black transition-colors duration-200"
        >
          –ù–∞—á–∞–ª–æ
        </Link>
        <span>/</span>
        <Link 
          href="/projects" 
          className="hover:text-black transition-colors duration-200"
        >
          –ü—Ä–æ–µ–∫—Ç–∏
        </Link>
        <span>/</span>
        <span className="text-black font-medium">{project.name}</span>
      </nav>

      {/* Project Header */}
      <div className="flex items-start justify-between">
        <div className="flex items-start space-x-4">
          {/* Project Icon */}
          <div className="w-12 h-12 bg-black rounded-lg flex items-center justify-center text-white text-xl">
            {getProjectTypeIcon(project.projectType)}
          </div>

          {/* Project Info */}
          <div className="flex-1">
            <div className="flex items-center space-x-3 mb-2">
              <h1 className="text-3xl font-semibold text-black">
                {project.name}
              </h1>
              <span className="px-3 py-1 bg-blue-600 text-white text-xs font-medium rounded-full">
                {getProjectTypeLabel(project.projectType)}
              </span>
            </div>
            
            {project.description && (
              <p className="text-gray-600 text-sm leading-relaxed max-w-2xl">
                {project.description}
              </p>
            )}
          </div>
        </div>

        {/* Action Buttons */}
        <div className="flex items-center space-x-3">
          <button
            onClick={onEdit}
            className="inline-flex items-center px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors duration-200"
          >
            <Edit className="w-4 h-4 mr-2" />
            –†–µ–¥–∞–∫—Ç–∏—Ä–∞–π
          </button>
          
          {onExport && (
            <button
              onClick={onExport}
              className="inline-flex items-center px-4 py-2 bg-white text-gray-700 text-sm font-medium rounded-lg border border-gray-300 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 transition-colors duration-200"
            >
              <Download className="w-4 h-4 mr-2" />
              –ï–∫—Å–ø–æ—Ä—Ç
            </button>
          )}
        </div>
      </div>
    </div>
  );
} 